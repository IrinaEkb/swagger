/* eslint-disable no-undef */
window.onload = function() {
  window["SwaggerUIBundle"] = window["swagger-ui-bundle"]
  window["SwaggerUIStandalonePreset"] = window["swagger-ui-standalone-preset"]
  // Build a system
  const ui = SwaggerUIBundle({
    // url: "https://petstore.swagger.io/v2/swagger.json",
    spec: {
      "openapi": "3.0.0",
      "info": {
        "title": "ACME API",
        "version": "1.0.0"
      },
      "servers": [
        {
          "url": "http://localhost:8080"
        }
      ],
      "security": [
        {
          "BasicAuth": []
        }
      ],
      "paths": {
        "/v1/customer/group/{foo}/pieces/completedAt": {
          "parameters": [],
          "get": {
            "operationId": "foo",
            "parameters": [
              {
                "name": "foo",
                "in": "path",
                "schema": {
                  "type": "string"
                },
                "required": true
              },
              {
                "name": "start",
                "in": "query",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                },
                "required": true
              },
              {
                "name": "end",
                "in": "query",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                },
                "required": true
              },
              {
                "name": "xService",
                "in": "query",
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "default": []
                },
                "required": false
              }
            ],
            "responses": {
              "200": {
                "description": "TODO",
                "content": {
                  "application/json": {
                    "schema": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/v1P"
                      }
                    }
                  }
                }
              },
              "400": {
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/v1PD"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "components": {
        "securitySchemes": {
          "BasicAuth": {
            "type": "http",
            "scheme": "basic"
          }
        },
        "schemas": {
          "v1P": {
            "type": "object",
            "properties": {
            },
            "additionalProperties": false
          },
          "v1PD": {
            "type": "object",
            "properties": {
              "type": {
                "type": "string",
                "description": "A URI reference that identifies the problem type. "
              },
              "title": {
                "type": "string",
                "description": "A short, human-readable summary of the problem type."
              },
              "status": {
                "type": "integer",
                "description": "The HTTP status code generated by the origin server for this occurrence of the problem."
              },
              "detail": {
                "type": "string",
                "description": "A human-readable explanation specific to this occurrence of the problem."
              },
              "instance": {
                "type": "string",
                "description": "A URI reference that identifies the specific occurrence of the problem."
              }
            },
            "required": [
              "title"
            ],
            "additionalProperties": false,
            "description": "The problem details data modeled defined at https://datatracker.ietf.org/doc/html/rfc7807#section-3.1 "
          }
        }
      }
    },
    dom_id: "#swagger-ui",
    presets: [
      SwaggerUIBundle.presets.apis,
      SwaggerUIStandalonePreset
    ],
    plugins: [
      SwaggerUIBundle.plugins.DownloadUrl
    ],
    // requestSnippetsEnabled: true,
    layout: "StandaloneLayout"
  })

  window.ui = ui

  ui.initOAuth({
    clientId: "your-client-id",
    clientSecret: "your-client-secret-if-required",
    realm: "your-realms",
    appName: "your-app-name",
    scopeSeparator: " ",
    scopes: "openid profile email phone address",
    additionalQueryStringParams: {},
    useBasicAuthenticationWithAccessCodeGrant: false,
    usePkceWithAuthorizationCodeGrant: false
  })
}
